{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\shop\\\\frontend\\\\src\\\\App.tsx\";\nimport { NavBar } from './components/NavBar';\nimport AppRoutes from './AppRoutes';\nimport { Component } from 'react';\nimport { getCookie, setCookie } from 'typescript-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  async componentDidMount() {\n    setCookie('islogin', false);\n    if (getCookie(\"islogin\") === \"true\") {\n      console.log(\"auth\");\n    } else {\n      let code = window.location.href.substring(28);\n      const resp = await fetch(\"http://localhost:3001/login?code=\" + code);\n      const data = await resp.json();\n      if (data[\"message\"] === \"error\") {\n        console.log(data);\n      } else {\n        console.log(data);\n        setCookie('islogin', true);\n        setCookie('id', data[\"id\"]);\n        setCookie('name', data[\"first_name\"] + \" \" + data[\"last_name\"]);\n        setCookie('image', data[\"proto_image\"]);\n      }\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AppRoutes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["NavBar","AppRoutes","Component","getCookie","setCookie","App","componentDidMount","console","log","code","window","location","href","substring","resp","fetch","data","json","render"],"sources":["D:/Проекты/shop/frontend/src/App.tsx"],"sourcesContent":["import { NavBar } from './components/NavBar'\nimport AppRoutes from './AppRoutes';\nimport { Component, ReactNode } from 'react';\nimport { getCookie, setCookie} from 'typescript-cookie';\n\n\nclass App extends Component{\n  async componentDidMount() {\n\n    setCookie('islogin', false);\n    if(getCookie(\"islogin\") === \"true\") {\n      console.log(\"auth\")\n    } else{\n      let code = (window.location.href).substring(28);\n      const resp = await fetch(\"http://localhost:3001/login?code=\"+code);\n      const data = await resp.json();  \n      if ( data[\"message\"] === \"error\"){\n        console.log(data);\n      } else {\n        console.log(data);\n        setCookie('islogin', true);\n        setCookie('id', data[\"id\"]);\n        setCookie('name', data[\"first_name\"] + \" \" + data[\"last_name\"]);\n        setCookie('image', data[\"proto_image\"]);\n      }\n    }\n  }\n\n  render(): ReactNode {\n    return (\n        <div className='font'>\n          <NavBar/>\n          <AppRoutes/>\n        </div>\n      )\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,qBAAqB;AAC5C,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,SAAS,QAAmB,OAAO;AAC5C,SAASC,SAAS,EAAEC,SAAS,QAAO,mBAAmB;AAAC;AAGxD,MAAMC,GAAG,SAASH,SAAS;EACzB,MAAMI,iBAAiB,GAAG;IAExBF,SAAS,CAAC,SAAS,EAAE,KAAK,CAAC;IAC3B,IAAGD,SAAS,CAAC,SAAS,CAAC,KAAK,MAAM,EAAE;MAClCI,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACrB,CAAC,MAAK;MACJ,IAAIC,IAAI,GAAIC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAEC,SAAS,CAAC,EAAE,CAAC;MAC/C,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,mCAAmC,GAACN,IAAI,CAAC;MAClE,MAAMO,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAI,EAAE;MAC9B,IAAKD,IAAI,CAAC,SAAS,CAAC,KAAK,OAAO,EAAC;QAC/BT,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;MACnB,CAAC,MAAM;QACLT,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;QACjBZ,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC;QAC1BA,SAAS,CAAC,IAAI,EAAEY,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3BZ,SAAS,CAAC,MAAM,EAAEY,IAAI,CAAC,YAAY,CAAC,GAAG,GAAG,GAAGA,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/DZ,SAAS,CAAC,OAAO,EAAEY,IAAI,CAAC,aAAa,CAAC,CAAC;MACzC;IACF;EACF;EAEAE,MAAM,GAAc;IAClB,oBACI;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAE,eACT,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACR;EAEZ;AACF;AAEA,eAAeb,GAAG"},"metadata":{},"sourceType":"module"}